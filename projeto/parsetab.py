
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMENT CPAR DOT ELSE EQUAL ID IF INDENTATION NEWLINE OPAR RDCOMT TAG VAR VARNAME VARVALUE WRCOMTpugHTML : pugHTML linhas\n                | linhas : linhas linha\n           | linhalinha : INDENTATION line NEWLINE\n            | line NEWLINE\n            | NEWLINEline : tagline\n            | tagdotline\n            | trashline\n            | cardinalline\n            | varline\n            | ifline\n            | elseline\n            | comentline\n            | readonlycomentlinecomentline : WRCOMT COMMENT\n                   | WRCOMTreadonlycomentline : RDCOMT COMMENT\n                           | RDCOMTelseline : ELSE ifline : IF VARNAME EQUAL VARVALUE\n                | IF VARNAMEtagdotline : TAG OPAR VARNAME EQUAL VARVALUE CPAR DOT\n                | TAG EQUAL VARVALUE DOT\n                | TAG COMMENT DOT\n                | TAG DOTtagline : TAG OPAR VARNAME EQUAL VARVALUE CPAR\n                | TAG EQUAL VARVALUE\n                | TAG COMMENT\n                | TAGtrashline : COMMENTcardinalline : ID VARVALUE DOT VARVALUE\n                    | ID VARVALUEvarline : VAR VARNAME EQUAL VARVALUE'
    
_lr_action_items = {'INDENTATION':([0,1,2,3,6,24,26,36,],[-2,4,4,-4,-7,-3,-6,-5,]),'NEWLINE':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,29,30,31,33,34,35,36,38,39,44,45,46,47,49,50,],[-2,6,6,-4,26,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-31,-32,-21,-18,-20,-3,36,-6,-30,-27,-34,-23,-17,-19,-5,-29,-26,-25,-33,-35,-22,-28,-24,]),'TAG':([0,1,2,3,4,6,24,26,36,],[-2,16,16,-4,16,-7,-3,-6,-5,]),'COMMENT':([0,1,2,3,4,6,16,22,23,24,26,36,],[-2,17,17,-4,17,-7,29,34,35,-3,-6,-5,]),'ID':([0,1,2,3,4,6,24,26,36,],[-2,18,18,-4,18,-7,-3,-6,-5,]),'VAR':([0,1,2,3,4,6,24,26,36,],[-2,19,19,-4,19,-7,-3,-6,-5,]),'IF':([0,1,2,3,4,6,24,26,36,],[-2,20,20,-4,20,-7,-3,-6,-5,]),'ELSE':([0,1,2,3,4,6,24,26,36,],[-2,21,21,-4,21,-7,-3,-6,-5,]),'WRCOMT':([0,1,2,3,4,6,24,26,36,],[-2,22,22,-4,22,-7,-3,-6,-5,]),'RDCOMT':([0,1,2,3,4,6,24,26,36,],[-2,23,23,-4,23,-7,-3,-6,-5,]),'$end':([0,1,2,3,6,24,26,36,],[-2,0,-1,-4,-7,-3,-6,-5,]),'OPAR':([16,],[27,]),'EQUAL':([16,32,33,37,],[28,41,42,43,]),'DOT':([16,29,31,38,49,],[30,39,40,44,50,]),'VARVALUE':([18,28,40,41,42,43,],[31,38,45,46,47,48,]),'VARNAME':([19,20,27,],[32,33,37,]),'CPAR':([48,],[49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pugHTML':([0,],[1,]),'linhas':([1,],[2,]),'linha':([1,2,],[3,24,]),'line':([1,2,4,],[5,5,25,]),'tagline':([1,2,4,],[7,7,7,]),'tagdotline':([1,2,4,],[8,8,8,]),'trashline':([1,2,4,],[9,9,9,]),'cardinalline':([1,2,4,],[10,10,10,]),'varline':([1,2,4,],[11,11,11,]),'ifline':([1,2,4,],[12,12,12,]),'elseline':([1,2,4,],[13,13,13,]),'comentline':([1,2,4,],[14,14,14,]),'readonlycomentline':([1,2,4,],[15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pugHTML","S'",1,None,None,None),
  ('pugHTML -> pugHTML linhas','pugHTML',2,'p_pugHTML','newParser.py',113),
  ('pugHTML -> <empty>','pugHTML',0,'p_pugHTML','newParser.py',114),
  ('linhas -> linhas linha','linhas',2,'p_linhas','newParser.py',122),
  ('linhas -> linha','linhas',1,'p_linhas','newParser.py',123),
  ('linha -> INDENTATION line NEWLINE','linha',3,'p_linha','newParser.py',132),
  ('linha -> line NEWLINE','linha',2,'p_linha','newParser.py',133),
  ('linha -> NEWLINE','linha',1,'p_linha','newParser.py',134),
  ('line -> tagline','line',1,'p_line','newParser.py',146),
  ('line -> tagdotline','line',1,'p_line','newParser.py',147),
  ('line -> trashline','line',1,'p_line','newParser.py',148),
  ('line -> cardinalline','line',1,'p_line','newParser.py',149),
  ('line -> varline','line',1,'p_line','newParser.py',150),
  ('line -> ifline','line',1,'p_line','newParser.py',151),
  ('line -> elseline','line',1,'p_line','newParser.py',152),
  ('line -> comentline','line',1,'p_line','newParser.py',153),
  ('line -> readonlycomentline','line',1,'p_line','newParser.py',154),
  ('comentline -> WRCOMT COMMENT','comentline',2,'p_comentline','newParser.py',159),
  ('comentline -> WRCOMT','comentline',1,'p_comentline','newParser.py',160),
  ('readonlycomentline -> RDCOMT COMMENT','readonlycomentline',2,'p_readonlycomentline','newParser.py',168),
  ('readonlycomentline -> RDCOMT','readonlycomentline',1,'p_readonlycomentline','newParser.py',169),
  ('elseline -> ELSE','elseline',1,'p_elseline','newParser.py',173),
  ('ifline -> IF VARNAME EQUAL VARVALUE','ifline',4,'p_ifline','newParser.py',179),
  ('ifline -> IF VARNAME','ifline',2,'p_ifline','newParser.py',180),
  ('tagdotline -> TAG OPAR VARNAME EQUAL VARVALUE CPAR DOT','tagdotline',7,'p_tagdotline','newParser.py',188),
  ('tagdotline -> TAG EQUAL VARVALUE DOT','tagdotline',4,'p_tagdotline','newParser.py',189),
  ('tagdotline -> TAG COMMENT DOT','tagdotline',3,'p_tagdotline','newParser.py',190),
  ('tagdotline -> TAG DOT','tagdotline',2,'p_tagdotline','newParser.py',191),
  ('tagline -> TAG OPAR VARNAME EQUAL VARVALUE CPAR','tagline',6,'p_tagline','newParser.py',203),
  ('tagline -> TAG EQUAL VARVALUE','tagline',3,'p_tagline','newParser.py',204),
  ('tagline -> TAG COMMENT','tagline',2,'p_tagline','newParser.py',205),
  ('tagline -> TAG','tagline',1,'p_tagline','newParser.py',206),
  ('trashline -> COMMENT','trashline',1,'p_trashline','newParser.py',218),
  ('cardinalline -> ID VARVALUE DOT VARVALUE','cardinalline',4,'p_cardinalline','newParser.py',223),
  ('cardinalline -> ID VARVALUE','cardinalline',2,'p_cardinalline','newParser.py',224),
  ('varline -> VAR VARNAME EQUAL VARVALUE','varline',4,'p_varline','newParser.py',232),
]
